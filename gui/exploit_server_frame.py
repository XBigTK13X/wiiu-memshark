import tkinter as tk

import server
import threading

# This is fine for a single background thread, but a semaphore would be better
KILL_THREAD = False

class ExploitServerFrame():
    def __init__(self, master, exploit_server):
        self.master = tk.Frame(master)
        self.server = exploit_server

        self.server_status_label = tk.Label(self.master, text="Server Info: not running")
        self.start_exploit_server_button = tk.Button(self.master, text="Start exploit server", command=self.start_exploit_server)
        self.stop_exploit_server_button = tk.Button(self.master, text="Stop exploit server", command=self.stop_exploit_server)

        self.server_status_label.grid()
        self.start_exploit_server_button.grid()
        self.stop_exploit_server_button.grid()

    def start_exploit_server(self):
        self.server.start()
        self.server_status_label.config(text="Server Info: Running at [{}]".format(self.server.get_listen_url()))

    def stop_exploit_server(self):        
        self.server.stop()
        self.server_status_label.config(text="Server Info: not running")
